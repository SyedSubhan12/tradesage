# FIXED: Environment Configuration Template for TradeSage Market Data API
# Copy this file to .env and update the values for your environment

# ==================== Application Configuration ====================
APP_NAME="TradeSage Market Data API"
APP_VERSION="2.0.0"
ENVIRONMENT=development  # development, staging, production
DEBUG=true
PORT=8005

# ==================== Database Configuration ====================
# FIXED: Using DATABASE_URL to match database.py expectations
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres

# Optional: Read replica for production (if not set, will use primary)
# READ_REPLICA_URL=postgresql://postgres:postgres@localhost:5433/postgres

# Database pool settings (optional - defaults are provided)
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=40
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# ==================== Redis Configuration ====================
REDIS_URL=redis://localhost:6379/0

# FIXED: Redis cluster configuration (only set if using cluster mode)
# Leave commented out for single Redis instance
# REDIS_CLUSTER_NODES=localhost:7000,localhost:7001,localhost:7002

# Redis connection settings
REDIS_MAX_CONNECTIONS=50
REDIS_SOCKET_TIMEOUT=10
REDIS_SOCKET_CONNECT_TIMEOUT=5
REDIS_HEALTH_CHECK_INTERVAL=30

# ==================== Data Source Configuration ====================
# FIXED: Replace with your actual Databento API key
DATABENTO_API_KEY=your-actual-databento-api-key-here

# Datasets to process (comma-separated)
DATASETS=XNAS.ITCH,XNYS.PILLAR,XASE.PILLAR,BATS.PITCH

# Timeframes to collect (comma-separated)
TIMEFRAMES=ohlcv-1s,ohlcv-1m,ohlcv-5m,ohlcv-15m,ohlcv-30m,ohlcv-1h,ohlcv-4h,ohlcv-1d

# ==================== Performance Configuration ====================
# Ingestion batch sizes
BATCH_SIZE_SYMBOLS=100
BATCH_SIZE_OHLCV=1000
BATCH_SIZE_TRADES=5000

# Concurrency limits
MAX_CONCURRENT_REQUESTS=10
MAX_CONCURRENT_DB_OPERATIONS=20

# Worker threads
CPU_WORKER_THREADS=4
IO_WORKER_THREADS=8

# ==================== Caching Configuration ====================
# L1 Cache sizes (in-memory)
L1_CACHE_PRICE_SIZE=5000
L1_CACHE_OHLCV_SIZE=2000
L1_CACHE_SYMBOLS_SIZE=100

# Cache TTL settings (in seconds)
CACHE_TTL_REALTIME=30
CACHE_TTL_MINUTE=300
CACHE_TTL_HOUR=3600
CACHE_TTL_DAILY=86400
CACHE_TTL_SYMBOLS=3600

# Cache cleanup intervals
CACHE_CLEANUP_INTERVAL=300
CACHE_EXPIRE_CHECK_INTERVAL=60

# ==================== WebSocket Configuration ====================
# Connection limits
WS_MAX_CONNECTIONS=10000
WS_MAX_SUBSCRIPTIONS_PER_CLIENT=50

# Rate limiting
WS_RATE_LIMIT_CONNECTIONS_PER_MINUTE=60
WS_RATE_LIMIT_MESSAGES_PER_MINUTE=1000

# Timeouts (in seconds)
WS_HEARTBEAT_TIMEOUT=60
WS_CONNECTION_TIMEOUT=300

# Message queue settings
WS_MESSAGE_QUEUE_SIZE=10000
WS_BROADCAST_BATCH_SIZE=100

# ==================== Circuit Breaker Configuration ====================
# Databento API circuit breaker
DATABENTO_CIRCUIT_BREAKER_FAILURE_THRESHOLD=3
DATABENTO_CIRCUIT_BREAKER_RECOVERY_TIMEOUT=120

# Database circuit breaker
DATABASE_CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
DATABASE_CIRCUIT_BREAKER_RECOVERY_TIMEOUT=60

# Redis circuit breaker
REDIS_CIRCUIT_BREAKER_FAILURE_THRESHOLD=3
REDIS_CIRCUIT_BREAKER_RECOVERY_TIMEOUT=30

# ==================== Security Configuration ====================
# CORS settings (comma-separated origins)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,https://yourdomain.com

# Authentication (optional)
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# API rate limiting
RATE_LIMIT_PER_MINUTE=1000
RATE_LIMIT_BURST=100

# ==================== Monitoring Configuration ====================
# Metrics and observability
ENABLE_METRICS=true
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=json  # json or text

# Health check settings
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_INTERVAL=30

# Optional: Jaeger tracing endpoint
# JAEGER_ENDPOINT=http://localhost:14268/api/traces
# ENABLE_DISTRIBUTED_TRACING=false

# ==================== Data Retention Configuration ====================
# Database retention (in days)
DATA_RETENTION_DAYS=365
ARCHIVE_AFTER_DAYS=90

# Cache settings
CACHE_MAX_MEMORY_MB=1024
CACHE_EVICTION_POLICY=allkeys-lru

# ==================== Startup Configuration ====================
# Initial data loading
ENABLE_STARTUP_INGESTION=true
STARTUP_INGESTION_DAYS=7

# Cache warming
ENABLE_CACHE_WARMING=true
CACHE_WARM_SYMBOLS=AAPL,MSFT,GOOGL,AMZN,TSLA,META,NVDA,NFLX

# Background tasks
ENABLE_BACKGROUND_TASKS=true
BACKGROUND_TASK_INTERVAL=300

# ==================== Feature Flags ====================
# Enable/disable features
ENABLE_REAL_TIME_PROCESSING=true
ENABLE_TRADE_DATA_INGESTION=true
ENABLE_NEWS_DATA_INGESTION=false
ENABLE_TECHNICAL_INDICATORS=true

# Experimental features
ENABLE_MACHINE_LEARNING=false
ENABLE_PREDICTIVE_CACHING=false
ENABLE_AUTO_SCALING=false

# ==================== Container Configuration ====================
# Container and deployment settings
CONTAINER_NAME=tradesage-market-data
NAMESPACE=default

# Service mesh (optional)
ENABLE_SERVICE_MESH=false
ISTIO_ENABLED=false

# ==================== Development Configuration ====================
# Development-specific settings (only for ENVIRONMENT=development)

# Override some settings for development
# DEBUG=true
# LOG_LEVEL=DEBUG
# ENABLE_STARTUP_INGESTION=false
# CACHE_TTL_MINUTE=60

# ==================== Production Configuration ====================
# Production-specific overrides (only for ENVIRONMENT=production)

# Security settings for production
# DEBUG=false
# LOG_LEVEL=INFO
# CORS_ORIGINS=https://yourdomain.com
# JWT_SECRET_KEY=your-production-jwt-secret

# Performance settings for production
# REDIS_CLUSTER_NODES=redis-node1:7000,redis-node2:7000,redis-node3:7000
# READ_REPLICA_URL=postgresql://user:pass@read-replica:5432/tradesage
# DB_POOL_SIZE=50
# REDIS_MAX_CONNECTIONS=100

# ==================== Docker Compose Overrides ====================
# These settings override defaults when using Docker Compose

# DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
# REDIS_URL=redis://redis:6379/0

# ==================== Kubernetes Configuration ====================
# These settings are typically provided by Kubernetes secrets/configmaps

# DATABASE_URL=postgresql://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
# REDIS_URL=redis://$(REDIS_HOST):$(REDIS_PORT)/$(REDIS_DB)
# DATABENTO_API_KEY=$(DATABENTO_API_KEY_SECRET)

# ==================== Monitoring and Alerting ====================
# External monitoring services (optional)

# Prometheus metrics endpoint (default: /metrics)
# METRICS_PATH=/metrics

# Health check endpoints
# HEALTH_PATH=/health
# READY_PATH=/health/ready
# LIVE_PATH=/health/live

# ==================== Notes ====================
# 1. Replace placeholder values with actual configuration
# 2. Use strong, unique passwords and API keys in production
# 3. Consider using a secrets management system for sensitive values
# 4. Ensure proper firewall and network security for database and Redis
# 5. Monitor resource usage and adjust pool sizes accordingly
# 6. Test configuration thoroughly before deploying to production